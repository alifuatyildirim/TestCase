version: '3.8'

services:
  testcase-api:
    image: testcase-api:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "2200:80"
    networks:
      - mongoCluster
    depends_on:
      - node0
      - node1
      - node2
  
  node0:
    image: mongo
    restart: always
    command: --replSet rs0 --bind_ip_all
    ports:
      - "27017:27017"
    networks:
      - mongoCluster
    healthcheck:
      test: >
        mongosh --eval "try{rs.initiate().ok}catch(e){rs.status().ok}"
      interval: 3s

  node1:
    image: mongo
    depends_on:
      - node0
    restart: always
    ports:
      - "27018:27017"
    command: --replSet rs0 --bind_ip_all --port 27018
    networks:
      - mongoCluster
    environment:
      PORT: 27018
    healthcheck:
      test: >
        mongosh --host localhost:27017 --eval "var me = '$${HOSTNAME}:$${PORT}'; rs.status().members.some(m => m.name == me) || rs.add({host: me})"
      interval: 3s

  node2:
    image: mongo
    depends_on:
      - node0
    restart: always
    ports:
      - "27019:27017"
    command: --replSet rs0 --bind_ip_all --port 27019
    networks:
      - mongoCluster
    environment:
      PORT: 27019
    healthcheck:
      test: >
        mongosh --host localhost:27017 --eval "var me = '$${HOSTNAME}:$${PORT}'; rs.status().members.some(m => m.name == me) || rs.add({host: me})"
      interval: 3s

networks:
  mongoCluster:
    driver: bridge
